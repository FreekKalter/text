{"name":"Text","tagline":"golang package text/columnwriter for printing nicely formatted columns in cli app. ","body":"\r\n# columnswriter\r\n---\r\n\r\n```go\r\nimport \"github.com/FreekKalter/text/columnswriter\"\r\n```\r\n\r\nPackage columnswriter imlements a write filter that prints evenly distributed\r\ncolumns fitted to current terminal window size.\r\n\r\n\r\n## TYPES\r\n\r\n```go\r\ntype Writer struct {\r\n    // contains filtered or unexported fields\r\n}\r\n\r\n```\r\n\r\n\r\n#### New\r\n```go\r\nfunc New(output io.Writer, inputSep rune, minWidth, padding int) *Writer\r\n```\r\n\r\nCreate a writer object with specified values, see Init for explanation of\r\nparamaters.\r\n\r\n\r\n\r\n \r\n#### Flush\r\n```go\r\nfunc (w *Writer) Flush()\r\n```\r\nDoes the actual printing, always call this after everthing you want to print has\r\nbeen printed.\r\n\r\n\r\n\r\n\r\n```go\r\nExample:\r\n\t// Print to stdout, input separated by spaces, no min widht, 2 spaces padding\r\n\tw := New(os.Stdout, ' ', 0, 2)\r\n\tw.nrTerminalColumns = 80 //for testing purposes, not necessary in real world\r\n\t\r\n\tfmt.Fprintln(w, `This is a test that has a lot of words and treats every `)\r\n\tfmt.Fprintln(w, `word as a column.`)\r\n\tfmt.Fprintln(w, `It should print nicely formatted columns similar to ls `)\r\n\tfmt.Fprintln(w, `directory lisings on nix systems.`)\r\n\t\r\n\tw.Flush()\r\n\t\r\n\t// Output:\r\n\t// This     is     a       test       that     has      a   lot      of\r\n\t// words    and    treats  every      word     as       a   column.  It\r\n\t// should   print  nicely  formatted  columns  similar  to  ls       directory\r\n\t// lisings  on     nix     systems.\r\n\r\n```\r\n\r\n \r\n#### Init\r\n```go\r\nfunc (w *Writer) Init(output io.Writer, inputSep rune, minWidth, padding int) *Writer\r\n```\r\nA Writer must be initialized with a call to Init. The first pararmater (output)\r\nspecifies the filter output. The inputSep is the character by wich each field is\r\nseperated in the input later on.\r\n\r\n\tminWidth: Is the minimum widht of a column\r\n\tpadding:  The number of spaces between columns\r\n\r\n\r\n\r\n\r\n \r\n#### Write\r\n```go\r\nfunc (w *Writer) Write(buf []byte) (n int, err error)\r\n```\r\nImplements Writer interface, so you can call it with the whole Fprint family\r\n\r\n\r\n\r\n\r\n\r\n*Copyright (c) 2013 Freek Kalter.  All rights reserved.\r\nSee the LICENSE file.*\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}